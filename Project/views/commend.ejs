<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Card 3D view Parallax</title>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- jQuery 로드 -->
        <link href="https://fonts.googleapis.com/css?family=Varela+Round" rel="stylesheet">
        <link rel="stylesheet" href="./page3.css">
        <script defer src="./page3.js"></script>
        <style>
           body {
    background-color: #000;
    font-family: 'Varela Round', sans-serif;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    margin: 0; /* body의 기본 여백 제거 */
    overflow-y: auto; /* 화면이 작을 때 스크롤을 가능하게 함 */
}

#container {
    display: flex;
    align-items: flex-start; /* 각 카드와 댓글을 위쪽 정렬 */
    justify-content: center;
    gap: 180px; /* 카드 사이의 기본 간격 */
    flex-wrap: wrap; /* 화면 크기에 따라 카드가 줄바꿈되도록 */
    padding: 20px; /* 화면 상하단에 여백을 추가 */
}

.perspective {
    width: 100%;
    perspective: 1000px;
}

#top {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: auto;
    flex-direction: column; /* 카드와 댓글이 세로로 정렬되도록 */
}

.card {
    width: 270px;
    height: 413px;
    margin: auto;
    box-shadow: 0 70px 63px -60px #494848;
    transform-style: preserve-3d;
    transition: transform .05s linear;
    position: relative; /* 자식 요소의 위치 조정을 위해 position 속성 추가 */
}

.card .thumb {
    background-size: cover;
    height: 100%;
    width: 100%;
    border-radius: 15px;
    position: relative;
}

.card .thumb:after {
    background: inherit;
    content: '';
    display: block;
    position: absolute;
    left: -60px;
    top: 40px;
    width: 100%;
    height: 108%;
    z-index: -1;
    filter: blur(55px);
}

.card h2 {
    position: absolute;
    top: 20px; /* 카드 내에서의 위쪽 위치 조정 */
    left: 20px; /* 카드 내에서의 왼쪽 위치 조정 */
    font-size: 30px; /* 텍스트 크기 조정 */
    font-weight: 700; /* 텍스트 두께 조정 */
    transform: translateZ(80px);
    margin: 0; /* 기본 마진 제거 */
}

.card span {
    position: absolute;
    bottom: 20px; /* 카드 내에서의 아래쪽 위치 조정 */
    left: 20px; /* 카드 내에서의 왼쪽 위치 조정 */
    font-size: 20px; /* 텍스트 크기 조정 */
    font-weight: 400; /* 텍스트 두께 조정 */
    transform: translateZ(35px);
    margin: 0; /* 기본 마진 제거 */
}

.comments {
    width: 270px;
    margin-top: 50px; /* 카드와 댓글 사이의 간격을 조정 */
    background: #1A1A1A;
    border-radius: 10px;
    padding: 10px;
}

.comment {
    margin-bottom: 10px; /* 댓글 사이의 간격 */
    height: 150px; /* 각 댓글의 고정 높이 */
    overflow-y: auto; /* 내용이 넘칠 경우 스크롤바 표시 */
    position: relative; /* 자식 요소의 위치를 기준으로 조정할 수 있도록 relative 설정 */
    display: flex; /* flexbox 사용 */
    flex-direction: column; /* 요소를 세로로 정렬 */
    justify-content: space-between; /* 요소들 사이의 간격을 균등하게 분배 */
}

.comment-header {
    display: flex;
    align-items: center;
}

.comment-header img {
    border-radius: 50%;
    margin-right: 10px;
}

.comment-author {
    font-weight: bold;
    margin-right: auto;
}

.comment-options {
    font-size: 12px;
    color: #bbb;
}

.comment-body {
    margin: 10px 0;
    flex-grow: 1; /* 중간 부분이 남은 공간을 차지하도록 함 */
}

.comment-footer {
    display: flex;
    align-items: center;
    justify-content: flex-start; /* 요소들이 왼쪽 정렬되도록 설정 */
    font-size: 12px;
    flex-wrap: nowrap; /* 요소가 한 줄에 나오도록 함 */
    width: 100%; /* 부모 요소의 너비에 맞게 조정 */
    padding: 5px 10px; /* 좌우 여백 확보 및 높이 축소 */
    box-sizing: border-box; /* padding을 width에 포함 */
    background-color: #1A1A1A; /* 기본 배경색 */
    min-height: 30px; /* 최소 높이 설정 */
}

.comment-footer span {
    display: flex;
    align-items: center; /* 자식 요소를 수직 중앙 정렬 */
    margin-left: 10px; /* 요소 사이의 간격을 설정 */
    white-space: nowrap; /* 텍스트가 줄바꿈되지 않도록 함 */
}

.comment-footer .likes,
.comment-footer .comments,
.comment-footer .comment-action {
    display: flex;
    align-items: center; /* 자식 요소를 수직 중앙 정렬 */
    margin: 0; /* 불필요한 마진 제거 */
}

/* 반응형 디자인을 위한 미디어 쿼리 */
@media (max-width: 1300px) {
    body {
        align-items: flex-start; /* 세로 정렬 시 화면 상단부터 정렬되도록 */
        overflow-y: auto; /* 화면이 작을 때 스크롤을 가능하게 함 */
    }

    #container {
        gap: 20px; /* 더 작은 화면에서 카드 간격 더 축소 */
        flex-direction: column; /* 카드가 세로로 배열되도록 변경 */
    }

    .card {
        width: 200px; /* 작은 화면에서 카드 크기 조정 */
        height: 300px;
    }

    .card h2 {
        font-size: 24px; /* 작은 화면에서 텍스트 크기 조정 */
        top: 10px; /* 작은 화면에서 위치 조정 */
        left: 10px;
    }

    .card span {
        font-size: 18px; /* 작은 화면에서 텍스트 크기 조정 */
        bottom: 10px; /* 작은 화면에서 위치 조정 */
        left: 10px;
    }

    .comments {
        width: 200px; /* 작은 화면에서 댓글 박스 크기 조정 */
        margin-top: 20px; /* 작은 화면에서 카드와 댓글 사이의 간격 */
    }
}
        </style>
    </head>
    <body>
        <div id="container">
          <% cards.forEach(card => { %>
            <div id="top">
                <div class="perspective">
                    <div class="card" id="card1">
                      <!-- 카드 이미지 여기서 수정  -->
                        <div class="thumb" data-url="/detail/<%= card.card_id %>"  style="background-image: url(https://images.unsplash.com/photo-1478358161113-b0e11994a36b?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=a11da19e81415e5a81029aade9df7774&auto=format&fit=crop&w=668&q=80)"></div>
                        <!-- <h2>Virtual Reality</h2>
                        <span>Dreaming with your eyes open!</span> -->
                        <h2><%= card.card_name %></h2>
                        <span><%= card[`card_${category}`] %></span>
                    </div>
                    <div class="comments">
                        <div class="comment">
                            <div class="comment-header">
                                <img src="https://via.placeholder.com/40" alt="Profile Image">
                                <div class="comment-author">코딩온 션</div>
                                <div class="comment-options">써봤어요</div>
                            </div>
                            <div class="comment-body">
                                누리2카드 미만 잡, 코딩온 대표도 쓰는 거 내가 봄.
                            </div>
                            <div class="comment-footer">
                                <span class="likes">🔥</span>
                                <span class="comments">0</span>
                                <span class="comment-action" data-likes="0">좋아요</span>
                            </div>
                        </div>
                        <div class="comment">
                            <div class="comment-header">
                                <img src="https://via.placeholder.com/40" alt="Profile Image">
                                <div class="comment-author">코딩온 데이먼</div>
                                <div class="comment-options">쓰고 싶어요</div>
                            </div>
                            <div class="comment-body">
                                쓰고 싶은데.. 대표랑 같은 카드 쓰기 싫음ㅠ
                            </div>
                            <div class="comment-footer">
                                <span class="likes">:+1:</span>
                                <span class="comments">0</span>
                                <span class="comment-action" data-likes="0">좋아요</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
          <% }) %>        
    </body>
    <script>
        // $(document).ready(function() { // DOM이 준비된 후에 실행
        // function addCardMovement(cardId) {
        //     $(cardId).on("mousemove", function(t) {
        //         var e = -($(cardId).width() / 2 - t.offsetX) / 10, // 좌우 움직임 조정
        //             n = ($(cardId).height() / 2 - t.offsetY) / 10; // 상하 움직임 조정
        //         $(cardId).css("transform", "rotateY(" + e + "deg) rotateX(" + n + "deg)");
        //     });
        //     $(cardId).on("mouseleave", function() { // 마우스가 카드에서 벗어날 때 초기화
        //         $(cardId).css("transform", "rotateY(0deg) rotateX(0deg)");
        //     });
        // }
        //     // 각 카드에 개별적으로 이벤트 리스너 추가
        //     addCardMovement("#card1");
        //     addCardMovement("#card2");
        //     addCardMovement("#card3");
        // });
        function addCardMovement() {
            $('.card').on("mousemove", function(t) {
                var e = -($(this).width() / 2 - t.offsetX) / 10, // 좌우 움직임 조정
                    n = ($(this).height() / 2 - t.offsetY) / 10; // 상하 움직임 조정
                $(this).css("transform", "rotateY(" + e + "deg) rotateX(" + n + "deg)");
            });
            $('.card').on("mouseleave", function() { // 마우스가 카드에서 벗어날 때 초기화
                $(this).css("transform", "rotateY(0deg) rotateX(0deg)");
            });
        }

        // 모든 카드에 이벤트 리스너 추가
        addCardMovement();


    // 카드 클릭 이벤트 추가 
    window.addEventListener("DOMContentLoaded", (event) => {
      const cards = document.querySelectorAll(".thumb");
      cards.forEach((e) => { 
        // 카드 클릭 이벤트 리스너 추가
        // 카드를 클릭했을 때 data-url 속성에 지정된 URL로 이동
        e.addEventListener("click", (event) => {
          const url = e.getAttribute("data-url");
          if (url) {
              window.location.href = url;
          }
        });
      });

    // addCommentClickListener 메서드
    // 댓글 본문을 클릭했을 때 팝업창을 띄움
    const addCommentClickListener = () => {
        const comments = document.querySelectorAll('.comment-body');
        comments.forEach(comment => {
            comment.addEventListener('click', (event) => {
                const popupWidth = window.innerWidth * 0.8;
                const popupHeight = window.innerHeight * 0.8;
                const popupLeft = (window.innerWidth - popupWidth) / 2;
                const popupTop = (window.innerHeight - popupHeight) / 2;
                window.open('comment', 'popup', `width=${popupWidth},height=${popupHeight},left=${popupLeft},top=${popupTop}`);
            });
        });
    };

    addCommentClickListener();  // 댓글 클릭 이벤트 리스너 추가 호출
    })


    </script>
</html>