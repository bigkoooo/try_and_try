<HTML>
  <!DOCTYPE html>
  <html lang="ko">
  <head>
    <meta charset="UTF-8">
    <title>회원가입</title>
    <style>
      body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  color: white;
  background-color: black;
  margin: 0;
}

fieldset {
  border: 1px solid #ccc;
  padding: 30px;
  width: 600px;
  height: 450px;
  background-color: #000000;
}

legend {
  font-size: 2.5em;
  font-weight: bold;
  margin-bottom: 20px;
  color: white;
}

.register {
  width: 100%;
}

label {
  margin-bottom: 10px;
  width: 80px;
  margin-top: -10px; 
}

.input-container {
  margin-top: 30px; 
}

input[type="text"], input[type="id"], input[type="password"] {
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: calc(100% - 150px);
  box-sizing: border-box;
  background-color: transparent;
  color: white;
}

.id-container, .nickname-container, .password-container {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 20px;
}

.id-container button, .nickname-container button {
  padding: 10px;
  color: white;
  background-color: black;
  border-radius: 5px;
  cursor: pointer;
  width: 100px;
  box-sizing: border-box;
  margin-top: -20px; /* 버튼을 더 위로 이동 */
}

.register-button {
  float: right;
  margin-top: 30px;
  width: 20%;
}

.id-container button:hover, .nickname-container button:hover {
  background-color: black;
  text-decoration: underline;
}

#nickname, #userid {
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: calc(100% - 150px);
  box-sizing: border-box;
}

#password {
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: calc(100% - 190px);
  box-sizing: border-box;
}

#nickname-check-result, #id-check-result {
  font-size: 0.7em;
  margin-bottom: 20px;
}

button {
  padding: 10px;
  background-color: white;
  color: black;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 20%;
  box-sizing: border-box;
}

button:hover {
  background-color: #fdfdfd;
}

a {
  display: block;
  margin-top: 20px;
  text-align: start;
  color: white;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}
    </style>
  </head>
  <body>
    <div class="container">
      <fieldset>
        <legend>회원가입</legend>
        <form name="form_register" class="register" enctype="multipart/form-data">
          <div class="input-container">
            <div class="nickname-container">
              <label for="nickname">닉네임⠀</label>
              <input id="nickname" type="text" name="nickname" placeholder="nickname" required />
              <button type="button" onclick="checkDuplicateNickname()">중복 확인</button>
            </div>
            <div class="id-container">
              <label for="userid">아이디</label>
              <input id="userid" type="id" name="userid" placeholder="ID" required />
              <button type="button" onclick="checkDuplicateId()">중복 확인</button>
            </div>
            <p id="id-check-result"></p>
            <div class="password-container">
              <label for="password">비밀번호⠀</label>
              <input id="password" type="password" name="password" placeholder="password" required />
            </div>
          </div>
          <button type="button" onclick="register();" class="register-button">가입</button>
        </form>
        <a href="./user/login">로그인</a>
      </fieldset>
    </div>
    <script>
    
      function validatePassword(password) {
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        return passwordRegex.test(password);
      }

      function checkDuplicateNickname() {
      const nickname = document.getElementById('nickname').value;
      axios.post('/user/check-nickname', { nickname: nickname })
        .then(response => {
          document.getElementById('nickname-check-result').textContent = response.data.message;
        })
        .catch(error => {
          document.getElementById('nickname-check-result').textContent = '오류가 발생했습니다.';
        });
    }

    function checkDuplicateId() {
      const userId = document.getElementById('userid').value;
      axios.post('/user/check-id', { userid: userId })
        .then(response => {
          document.getElementById('id-check-result').textContent = response.data.message;
        })
        .catch(error => {
          document.getElementById('id-check-result').textContent = '오류가 발생했습니다.';
        });
    }
  
      function register() {
        const form = document.forms['form_register'];
        const userId = form.userid.value;
        const password = form.password.value;
        const nickname = form.nickname.value;
  
        if (!validatePassword(password)) {
          alert('비밀번호가 유효하지 않습니다. 최소 8자 이상, 대문자, 소문자, 숫자, 특수문자를 포함해야 합니다.');
          return;
        }
  
        axios({
          method: 'POST',
          url: '/user/signup',
          data: {
            userid: userId,
            password: password,
            nickname: nickname,
          }
        }).then((res) => {
          console.log(res);
          editCancel();
          window.location.href = '/user/login';
        }).catch((error) => {
          console.error('Error in register:', error);
          if (error.response && error.response.data) {
            alert(error.response.data.message);
          }
        });
      }
  
      function editCancel() {
        const form = document.forms['form_register'];
        form.userid.value = '';
        form.password.value = '';
        form.nickname.value = '';
      }
  
       // editCancel : 원래의 빈값으로 바꿔주는 용도
    
    </script>
  </body>
  </html>